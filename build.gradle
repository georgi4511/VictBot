plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
//	id 'org.hibernate.orm' version '6.5.3.Final'
	id 'org.asciidoctor.jvm.convert' version '4.0.4'
	id "com.diffplug.spotless" version "7.0.2"

}

group = 'com.github.georgi4511'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springAiVersion', "1.0.0-M2")
	set('springShellVersion', "3.3.3")
}

dependencies {
	// https://mvnrepository.com/artifact/net.dv8tion/JDA
	implementation 'net.dv8tion:JDA:5.2.3'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
//	implementation 'org.springframework.shell:spring-shell-starter'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'io.micrometer:micrometer-registry-dynatrace'
//	developmentOnly "org.springframework.ai:spring-ai-spring-boot-docker-compose:${springAiVersion}"
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//	testImplementation 'org.springframework.shell:spring-shell-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.google.code.gson:gson:2.11.0'

}

dependencyManagement {
	imports {
//		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}